// Code generated by github.com/eqld/optional/cmd, DO NOT EDIT
package optional

import "encoding/json"

// Int32 is a superset of type int32 that has explicit "empty" value.
type Int32 struct {
	Value   int32
	Present bool
}

// MakeInt32 converts int32 to Int32
func MakeInt32(value int32) Int32 {
	return Int32{Value: value, Present: true}
}

// MakeInt32FromPtr converts a pointer to int32 to Int32
func MakeInt32FromPtr(ptr *int32) Int32 {
	if ptr == nil {
		return Int32{}
	}

	return MakeInt32(*ptr)
}

// SafeValue safely converts Int32 to int32 returning its default value if the value of Int32 is not present
func (o Int32) SafeValue() (value int32) {
	if o.Present {
		value = o.Value
	}

	return
}

// SafePtr safely converts Int32 to a pointer to int32 returning nil pointer if the value of Int32 is not present;
// the pointer, if not nil, DOES NOT point to the underlying value of Int32
func (o Int32) SafePtr() (ptr *int32) {
	if o.Present {
		ptr = new(int32)
		*ptr = o.Value
	}

	return
}

// MarshalJSON marshals Int32 to json
func (o Int32) MarshalJSON() ([]byte, error) {
	if !o.Present {
		return []byte("null"), nil
	}

	return json.Marshal(o.Value)
}

// UnmarshalJSON unmarshals Int32 from json
func (o *Int32) UnmarshalJSON(data []byte) error {
	if len(data) == 4 && string(data) == "null" {
		return nil
	}

	o.Present = true

	return json.Unmarshal(data, &o.Value)
}
